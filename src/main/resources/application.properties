spring.application.name=DocumentService
server.port=4002

#Postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/Document
spring.datasource.username=postgres
spring.datasource.password=qweasdzxc
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.devtools.restart.enabled=false
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.connection-timeout=30000

eureka.instance.hostname=localhost
eureka.instance.prefer-ip-address=false
eureka.instance.instance-id=localhost:${spring.application.name}:${server.port}
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# Show only specific logging
logging.level.com.example.DocumentService=INFO
logging.level.com.example.DocumentService.Document.Client.WebClientConfig=INFO


# Enable debug logging for resilience4j
logging.level.io.github.resilience4j.circuitbreaker=DEBUG
logging.level.io.github.resilience4j.retry=DEBUG

# Enable AOP debug to see if annotations are being processed
logging.level.org.springframework.aop=DEBUG

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus,env,configprops,loggers
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
management.endpoints.web.base-path=/actuator
management.server.port=4002

# Health Check Configuration
management.health.circuitbreakers.enabled=true
management.health.diskspace.enabled=true
management.health.db.enabled=true

# Info Endpoint Configuration
info.app.name=@project.name@
info.app.description=Collaborative Document Editor Authentication Service
info.app.version=@project.version@
info.app.encoding=@project.build.sourceEncoding@
info.app.java.version=@java.version@

# Metrics Configuration
management.metrics.tags.application=${spring.application.name}
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles.http.server.requests=0.5,0.9,0.95,0.99



# Resilience4j Configuration - More aggressive for testing
resilience4j.circuitbreaker.instances.userService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.userService.slidingWindowSize=2
resilience4j.circuitbreaker.instances.userService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.userService.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.userService.permittedNumberOfCallsInHalfOpenState=1
resilience4j.circuitbreaker.instances.userService.minimumNumberOfCalls=2
resilience4j.circuitbreaker.instances.userService.slidingWindowType=count_based
resilience4j.circuitbreaker.instances.userService.automaticTransitionFromOpenToHalfOpenEnabled=true

# Retry Configuration - Fewer attempts for faster testing
resilience4j.retry.instances.userService.maxAttempts=2
resilience4j.retry.instances.userService.waitDuration=200ms
resilience4j.retry.instances.userService.retryExceptions=java.lang.Exception

# Bulkhead Configuration
resilience4j.bulkhead.instances.userService.maxConcurrentCalls=5
resilience4j.bulkhead.instances.userService.maxWaitDuration=500ms

# Enable debug logging for resilience4j
logging.level.io.github.resilience4j=DEBUG

# Custom console log pattern
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%X{spring.application.name}] - %msg%n

# Optional: file output if needed
logging.file.name=logs/document-service.log
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%X{spring.application.name}] - %msg%n